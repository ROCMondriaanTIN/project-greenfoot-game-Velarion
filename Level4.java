import greenfoot.*;  // (World, Actor, GreenfootImage, Greenfoot and MouseInfo)

public class Level4 extends World {

    private CollisionEngine ce;
    public int character2;

    public Level4(int character) {
        // Create a new world with 600x400 cells with a cell size of 1x1 pixels.
        super(1000, 800, 1, false);
        this.setBackground("Level4Background.png");
        this.character2 = character;
        
        int[][] map = {
            {-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,99,114,114,114,114,114,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{-1,-1,119,-1,-1,-1,-1,-1,-1,-1,-1,97,114,114,114,114,114,114,114,114,114,114,109,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1},
{114,114,114,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,110,114,114,114,114,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,107,114,114,114,109,-1,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,97,97,97,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,107,108,97,97,97,110,109,-1,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,97,97,97,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,107,108,97,97,97,97,97,110,109,-1},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,97,97,97,114,101,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,107,108,97,97,97,97,97,97,97,110,109},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,97,97,97,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,107,108,97,97,97,97,97,97,97,97,97,110},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,97,97,97,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,107,108,97,97,97,97,97,97,97,97,97,97,97},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,114,114,114,114,97,97,97,-1,-1,-1,-1,103,-1,-1,-1,-1,147,148,149,149,149,149,149,149,149,97,97,97,97,97},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,97,97,97,-1,-1,-1,-1,-1,-1,-1,-1,147,148,149,149,149,149,149,149,149,149,149,97,97,97,97},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,97,97,97,114,101,-1,-1,-1,-1,-1,107,108,97,97,97,97,97,97,97,97,97,97,97,97,97,97},
{-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,97,97,97,-1,-1,-1,-1,-1,-1,107,108,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97},
{-1,-1,-1,-1,114,114,114,114,-1,-1,-1,114,114,114,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,97,97,97,-1,-1,-1,-1,-1,107,108,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97},
{114,114,114,114,97,97,97,97,-1,-1,-1,97,97,97,114,114,114,114,114,114,114,114,114,114,97,97,97,-1,-1,-1,99,114,108,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97},
{97,97,97,97,97,97,97,97,-1,-1,99,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-1,-1,-1,-1,-1,97,-1,-1,-1,-1,-1,97,97,97,97,97,97,97,97,97,97,97,97},
{97,97,97,97,97,97,97,97,-1,-1,-1,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-1,-1,-1,-1,-1,97,-1,-1,-1,-1,-1,97,97,97,97,97,97,97,97,97,97,97,97},
{97,97,97,97,97,97,97,97,-1,-1,-1,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,114,101,-1,-1,-1,97,114,114,-1,-1,-1,97,97,97,97,97,97,97,97,97,97,97,97},
{97,97,97,97,97,97,97,97,114,114,114,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,114,97,97,97,97,97,97,97,97,97,97,97,97},
{97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,97,97,97,97,97,97,97,97,97,97,97,97},
{97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,114,114,114,114,114,114,114,114,114,114,114,97,97,97,97,97,97,97,97,97,97,97,97},
{97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97},


        };
        
        // Declareren en initialiseren van de TileEngine klasse om de map aan de world toe te voegen
        TileEngine te = new TileEngine(this, 60, 60, map);
        // Declarenre en initialiseren van de camera klasse met de TileEngine klasse 
        // zodat de camera weet welke tiles allemaal moeten meebewegen met de camera
        Camera camera = new Camera(te);
        // Declareren en initialiseren van een main karakter van het spel mijne heet Hero. Deze klasse 
        // moet de klasse Mover extenden voor de camera om te werken
        Hero hero = new Hero(character2);

        // Laat de camera een object volgen. Die moet een Mover instatie zijn of een extentie hiervan.
        camera.follow(hero);
        
        // Alle objecten toevoegen aan de wereld: camera, main karakter en mogelijke enemies
        addObject(camera, 0, 0);
    
        addObject(hero, 89, 1093);
        addObject(new CoinSilver(), 330, 1050);
        addObject(new CoinSilver(), 390, 1050);
        addObject(new CoinSilver(), 1410, 805);
        addObject(new CoinSilver(), 1050, 326);
        addObject(new CoinGold(), 1530, 449); 
        addObject(new CoinGold(), 2250, 1349); 
        addObject(new Door7(), 2670, 393);
        addObject(new Door8(), 2670, 453);
        addObject(new Fireball(), 516, 1343);
        addObject(new Enemy(), 1042, 1117);
        addObject(new Enemy(), 1055, 394);
        addObject(new Enemy(), 1824, 1475);
        addObject(new MovingPlatform8(), 836, 750);
        addObject(new MovingPlatform9(), 896, 750);
        addObject(new MovingPlatform10(), 956, 750);
        addObject(new MovingPlatform8(), 476, 690);
        addObject(new MovingPlatform9(), 536, 690);
        addObject(new MovingPlatform10(), 596, 690);
        addObject(new MovingPlatform11(), 1160, 957);
        addObject(new Key(), 2010, 1289);
        addObject(new Gem(), 2663, 913);
        // Initialiseren van de CollisionEngine zodat de speler niet door de tile heen kan lopen.
        // De collision engine kijkt alleen naar de tiles die de variabele solid op true hebben staan.
        ce = new CollisionEngine(te, camera);
        // Toevoegen van de mover instantie of een extentie hiervan
        ce.addCollidingMover(hero);
    }
        
    @Override
    public void act() {
        ce.update();
    }
}
